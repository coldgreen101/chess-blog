---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

// Define interfaces for the data shapes
interface Post {
  title: string;
  url: string;
  frontmatter: {
    title: string;
    tags: string[];
  };
}

interface StaticPath {
  params: {
    tag: string;
  };
}

// Add type annotations to variables and functions
export async function getStaticPaths(): Promise<StaticPath[]> {
  const allPosts: Post[] = await Astro.glob('../posts/*.md');
  const uniqueTags: string[] = [
    ...new Set(allPosts.flatMap((post) => post.frontmatter.tags)),
  ];

  return uniqueTags.map((tag) => ({
    params: {
      tag,
    },
  }));
}

const { tag, posts }: { tag: string; posts: Post[] } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts.map((post: Post) => (
        <BlogPost url={post.url} title={post.frontmatter.title} />
      ))
    }
  </ul>
</BaseLayout>
